{"ast":null,"code":"import { Provider } from 'react-redux';\nimport store from \"../ck/redux/store\";\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Src1 from \"./src/src1\";\nimport src2 from \"./src/src2\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar App = function App() {\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(Src1, {})\n  });\n};\nexport default App;","map":{"version":3,"names":["Provider","store","createNativeStackNavigator","Src1","src2","NavigationContainer","jsx","_jsx","App","children"],"sources":["D:/MBWEB/cksocua/ck/App.js"],"sourcesContent":["import { Provider } from 'react-redux';\nimport store from '../ck/redux/store';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Src1 from './src/src1';\nimport src2 from './src/src2';\nimport { NavigationContainer } from '@react-navigation/native';\n\nconst App = () => {\n  // const stack = createNativeStackNavigator();\n  return (\n    // <NavigationContainer>\n    //   <stack.Navigator initialRouteName='src1' screenOptions={{ headerShown: false }}>\n    //     <Provider store={store}>\n    //       <stack.Screen name='src1' component={src1} />\n    //       {/* <stack.Screen name='src2' component={src2} /> */}\n    //     </Provider>\n    //   </stack.Navigator>\n    // </NavigationContainer>\n    <Provider store={store}>\n      <Src1 />\n      {/* <Src2 /> */}\n    </Provider>\n  )\n\n}\n\n\nexport default App;"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,aAAa;AACtC,OAAOC,KAAK;AACZ,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,IAAI;AACX,OAAOC,IAAI;AACX,SAASC,mBAAmB,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE/D,IAAMC,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAEhB,OASED,IAAA,CAACP,QAAQ;IAACC,KAAK,EAAEA,KAAM;IAAAQ,QAAA,EACrBF,IAAA,CAACJ,IAAI,IAAE;EAAC,CAEA,CAAC;AAGf,CAAC;AAGD,eAAeK,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}